===============================
The ``lazy_matrix_mul`` module
===============================

Using ``lazy_matrix_mul``
--------------------------

Import the function:

    >>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now test it:

    >>> print(lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
    [[ 7 10]
     [15 22]]

    >>> print(lazy_matrix_mul([[1, 2]], [[3.0, 4], [5, 6.0]]))
    [[13. 16.]]

    >>> print(lazy_matrix_mul([[1, 2]], 9))
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> print(lazy_matrix_mul("Hello", [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> print(lazy_matrix_mul(["Betty", "Holberton"], [[1, 2]]))
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> print(lazy_matrix_mul([[1, 2]], ["Betty", "Holberton"]))
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> print(lazy_matrix_mul([], [[9, 4]]))
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> print(lazy_matrix_mul([[9, 4]], [[]]))
    Traceback (most recent call last):
    ValueError: m_b can't be empty

    >>> print(lazy_matrix_mul([[1, 2], ["Hello", 9]], [[9, 4], [2, 5]]))
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> print(lazy_matrix_mul([[9, 4], [2, 5]], [[1, 2], ["Hello", 9]]))
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

    >>> print(lazy_matrix_mul([[9, 4], [2]], [[1, 2], [4, 9]]))
    Traceback (most recent call last):
    TypeError: each row of m_a must should be of the same size

    >>> print(lazy_matrix_mul([[9, 4], [2, 7.0]], [[1], [4, 9]]))
    Traceback (most recent call last):
    TypeError: each row of m_b must should be of the same size

    >>> print(lazy_matrix_mul([[9, 4, 4], [2, 8, 2]], [[1, 2], [4, 9]]))
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied
